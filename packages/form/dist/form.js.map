{"version":3,"sources":["webpack://@spiral-toolkit/form/webpack/universalModuleDefinition","webpack://@spiral-toolkit/form/webpack/bootstrap","webpack://@spiral-toolkit/form/external \"@spiral-toolkit/core\"","webpack://@spiral-toolkit/form/./src/formToObject.js","webpack://@spiral-toolkit/form/./src/index.js","webpack://@spiral-toolkit/form/./src/Form.js","webpack://@spiral-toolkit/form/./src/formMessages.js","webpack://@spiral-toolkit/form/./src/iterateInputs.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FormToObject","formRef","this","keyRegex","$form","$formElements","formObj","setForm","setFormElements","setFormObj","document","getElementById","isDomNode","querySelectorAll","length","node","nodeType","forEach","arr","callback","keys","addChild","result","domNode","nodeName","type","checked","push","DOMchilds","child","splice","test","disabled","match","sf","Form","default","registerInstanceType","formMessages","iterateInputs","options","_construct","core","createModulePrototype","init","mixMessagesOptions","DOMEvents","helpers","addEvents","events","Events","optionsToGrab","context","processor","self","url","domAttr","method","lockType","messagesType","messages","val","JSON","parse","e","console","error","assign","useAjax","toLowerCase","ajaxCallback","beforeSubmitCallback","afterSubmitCallback","headers","Accept","undefined","global","instances","form","defaults","onSubmit","getInstance","preventDefault","stopPropagation","removeMessages","data","getFormData","FormData","trigger","send","lock","remove","removeInstance","warn","addInstance","showFormMessage","showFieldMessage","showFieldsMessages","showMessages","removeMessage","processAnswer","answer","sendOptions","that","fn","eval","ajax","then","log","setOptions","opt","add","DOMNode","eventType","eventFunction","die","removeAll","template","close","place","levels","success","info","warning","field","fieldTemplate","fieldClose","fieldPlace","fieldPrefix","prepareMessageObject","message","toString","text","debug","notice","danger","critical","alert","emergency","isMsg","errors","warnings","status","statusText","_messages","closeHandler","addEventListener","removeEventListener","el","parentNode","removeChild","classList","indexOf","parent","tpl","parser","DOMParser","item","replace","msgEl","parseFromString","firstChild","lastChild","appendChild","insertBefore","querySelector","isContainer","domTools","closest","msgObj","container","notFound","names","prefix","findNodes","partOfSelector","selector","sel","nodes","max","obj"],"mappings":"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","file":"form.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@spiral-toolkit/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@spiral-toolkit/form\", [\"@spiral-toolkit/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@spiral-toolkit/form\"] = factory(require(\"@spiral-toolkit/core\"));\n\telse\n\t\troot[\"@spiral-toolkit/form\"] = factory(root[\"@spiral-toolkit/core\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/* eslint-disable no-param-reassign */\n/* eslint-disable func-names */\n\n/*\n * github.com/serbanghita/FormToObject.js 1.0.1  (c) 2013 Serban Ghita <serbanghita@gmail.com>\n * @licence MIT\n */\n// Constructor.\n\nconst FormToObject = function (formRef) {\n  if (!formRef) {\n    return false;\n  }\n\n  this.formRef = formRef;\n  // eslint-disable-next-line no-useless-escape\n  this.keyRegex = /[^\\[\\]]+/g;\n  this.$form = null;\n  this.$formElements = [];\n  this.formObj = {};\n\n  if (!this.setForm()) {\n    return false;\n  }\n  if (!this.setFormElements()) {\n    return false;\n  }\n\n  return this.setFormObj();\n};\n\n// Set the main form object we are working on.\nFormToObject.prototype.setForm = function () {\n  switch (typeof this.formRef) {\n    case 'string':\n      this.$form = document.getElementById(this.formRef);\n      break;\n\n    case 'object':\n      if (this.isDomNode(this.formRef)) {\n        this.$form = this.formRef;\n      }\n      break;\n\n    default:\n  }\n\n  return this.$form;\n};\n\n// Set the elements we need to parse.\nFormToObject.prototype.setFormElements = function () {\n  this.$formElements = this.$form.querySelectorAll('input, textarea, select');\n  return this.$formElements.length;\n};\n\n// Check to see if the object is a HTML node.\nFormToObject.prototype.isDomNode = function (node) {\n  return typeof node === 'object' && 'nodeType' in node && node.nodeType === 1;\n};\n\n// Iteration through arrays and objects. Compatible with IE.\nFormToObject.prototype.forEach = function (arr, callback) {\n  if ([].forEach) {\n    [].forEach.call(arr, callback);\n    return;\n  }\n\n  // let i;\n  // for (i in arr) {\n  Object.keys(arr).forEach((i) => {\n    // Object.prototype.hasOwnProperty instead of arr.hasOwnProperty for IE8 compatibility.\n    if (Object.prototype.hasOwnProperty.call(arr, i)) {\n      callback.call(arr, arr[i]);\n    }\n  });\n};\n\n// Recursive method that adds keys and values of the corresponding fields.\nFormToObject.prototype.addChild = function (result, domNode, keys, value) {\n  // #1 - Single dimensional array.\n  if (keys.length === 1) {\n    // We're only interested in the radio that is checked.\n    if (domNode.nodeName === 'INPUT' && domNode.type === 'radio') {\n      if (domNode.checked) {\n        result[keys] = value;\n        return;\n      }\n      return;\n    }\n\n    // Checkboxes are a special case. We have to grab each checked values\n    // and put them into an array.\n    if (domNode.nodeName === 'INPUT' && domNode.type === 'checkbox') {\n      if (domNode.checked) {\n        if (!result[keys]) {\n          result[keys] = [];\n        }\n        result[keys].push(value);\n        return;\n      }\n      return;\n    }\n\n    // Multiple select is a special case.\n    // We have to grab each selected option and put them into an array.\n    if (domNode.nodeName === 'SELECT' && domNode.type === 'select-multiple') {\n      result[keys] = [];\n      const DOMchilds = domNode.querySelectorAll('option[selected]');\n      if (DOMchilds) {\n        this.forEach(DOMchilds, (child) => {\n          result[keys].push(child.value);\n        });\n      }\n      return;\n    }\n\n    // Fallback. The default one to one assign.\n    result[keys] = value;\n  }\n\n  // #2 - Multi dimensional array.\n  if (keys.length > 1) {\n    if (!result[keys[0]]) {\n      result[keys[0]] = {};\n    }\n\n    this.addChild(result[keys[0]], domNode, keys.splice(1, keys.length), value);\n  }\n\n  // return result; // ?\n};\n\nFormToObject.prototype.setFormObj = function () {\n  let test;\n  let i = 0;\n\n  for (i = 0; i < this.$formElements.length; i += 1) {\n    // Ignore the element if the 'name' attribute is empty.\n    // Ignore the 'disabled' elements.\n    if (this.$formElements[i].name && !this.$formElements[i].disabled) {\n      test = this.$formElements[i].name.match(this.keyRegex);\n      this.addChild(this.formObj, this.$formElements[i], test, this.$formElements[i].value);\n    }\n  }\n\n  return this.formObj;\n};\n\nmodule.exports = FormToObject;\n","\nconst sf = require('@spiral-toolkit/core');\nconst Form = require('./Form').default;\n\nsf.registerInstanceType(Form, 'js-sf-form');\n\nmodule.exports = Form; // ES6 default export will not expose us as global\n","/* eslint-disable no-console */\n/* eslint-disable func-names */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\n\nimport core from '@spiral-toolkit/core';\n\nimport FormToObject from './formToObject';\n\nconst formMessages = require('./formMessages');\nconst iterateInputs = require('./iterateInputs');\n\n\n/**\n * Spiral Forms\n * @param {Object} sf\n * @param {Object} node  DomNode of form\n * @param {Object} [options] all options to override default\n * @constructor Form\n * @extends BaseDOMConstructor\n */\nconst Form = function (sf, node, options) {\n  this._construct(sf, node, options);\n};\n\n\n/**\n * @lends sf.Form.prototype\n */\nForm.prototype = core.createModulePrototype();\n\n/**\n * Name to register\n * @type {string}\n */\nForm.prototype.name = 'form';\n\n/**\n * Function that call on new instance is created.\n * @param {Object} sf\n * @param {Object} node  DomNode of form\n * @param {Object} [options] all options to override default\n * @private\n */\nForm.prototype._construct = function (sf, node, options) {\n  this.init(sf, node, options);\n  this.mixMessagesOptions();\n  // this.options.fillFrom && this.fillFieldsFrom(); // id required to fill form\n\n  /**\n     * @extends DOMEvents\n     * @type {DOMEvents}\n     * @inheritDoc\n     * */\n  this.DOMEvents = new this.sf.helpers.DOMEvents();\n  this.addEvents();\n\n  this.events = new this.sf.core.Events(['beforeSend', 'success', 'error', 'always']);\n  core.iterateInputs = iterateInputs;\n};\n\n/**\n * @override\n * @inheritDoc\n * @enum {Object}\n * @deprecated\n */\nForm.prototype.optionsToGrab = {\n  /**\n     * Link to form\n     */\n  context: {\n    processor(node) { // Processor\n      return node;\n    },\n  },\n  /**\n     * Link to 'this'\n     */\n  self: {\n    processor() {\n      return this;\n    },\n  },\n  /**\n     * URL to send form (if ajax form) <b>Default: \"/\"</b>\n     */\n  url: {\n    domAttr: 'action',\n    value: '/',\n  },\n  /**\n     * Method to send to send form (if ajax form) <b>Default: \"POST\"</b>\n     */\n  method: {\n    domAttr: 'method',\n    value: 'POST',\n  },\n  /**\n     * Lock type when form sending <b>Default: \"default\"</b> @see sf.lock\n     */\n  lockType: {\n    value: 'default',\n    domAttr: 'data-lockType',\n  },\n  /**\n     *\n     */\n  messagesType: {\n    value: 'spiral',\n    domAttr: 'data-messagesType',\n  },\n  /**\n     * Pass custom template for form messages\n     */\n  messages: {\n    value: '',\n    domAttr: 'data-messages',\n    processor(node, val, self) {\n      if (!val) return this.value;\n      if (typeof val === 'string') {\n        try {\n          val = JSON.parse(val);\n        } catch (e) {\n          console.error('Form JSON.parse error: ', e);\n        }\n      }\n      return Object.assign(self.value, val);\n    },\n  },\n  /**\n     * Use ajax to submit form <b>Default: true</b>\n     */\n  useAjax: { // Attribute of form\n    value: true, // Default value\n    domAttr: 'data-useAjax',\n    processor(node, val) { // processor to process data before return\n      if (typeof val === 'boolean') {\n        return val;\n      }\n      val = (val !== undefined && val !== null) ? val.toLowerCase() : '';\n      if (val === 'false') {\n        val = false;\n      } else if (val === 'true') {\n        val = true;\n      }\n      return val;\n    },\n  },\n  /**\n     * Callback after form submitting <b>Default: false</b>\n     * <br/>\n     * <b> Example </b>\n     * function(options){\n     *  //options contains all options after send\n     * }\n     */\n  ajaxCallback: { // attribute of form\n    value: false, // Default value\n    domAttr: 'data-callback',\n  },\n  beforeSubmitCallback: { // attribute of form\n    value: false, // Default value\n    domAttr: 'data-before-submit',\n  },\n  afterSubmitCallback: { // attribute of form\n    value: false, // Default value\n    domAttr: 'data-after-submit',\n  },\n  headers: { // attribute of form\n    value: { Accept: 'application/json' }, // Default value\n    domAttr: 'data-headers',\n    processor(node, val, self) {\n      if (val === undefined || val == null) return this.value;\n      if (typeof val === 'string') {\n        try {\n          val = JSON.parse(val);\n        } catch (e) {\n          console.error('Form JSON.parse error: ', e);\n        }\n      }\n      return Object.assign(self.value, val);\n    },\n  },\n};\n\nForm.prototype.mixMessagesOptions = function () {\n  const global = this.sf.options.instances.form;\n  this.options.messages = {\n    ...formMessages.defaults,\n    ...global && global.messages && global.messages[this.options.messagesType],\n    ...this.options.messages,\n  };\n};\n\n/**\n * Call on form submit\n * @param {Event} e submit event\n */\nForm.prototype.onSubmit = function (e) {\n  if (this.sf.getInstance('lock', this.node)) {\n    // On lock we should'n do any actions\n    e.preventDefault();\n    e.stopPropagation();\n    return;\n  }\n\n  this.removeMessages();\n\n  this.options.data = this.getFormData();\n\n  // We can send files only with FormData\n  // If form contain files and no FormData than disable ajax\n  if (!window.FormData && this.options.context.querySelectorAll(\"input[type='file']\").length !== 0) {\n    this.options.useAjax = false;\n  }\n  this.events.trigger('beforeSend', this.options);\n  // sf.events.performAction(\"beforeSubmit\", this.options);\n  // this.events.performAction(\"beforeSubmit\", this.options);\n\n  if (this.options.useAjax) {\n    this.send(this.options);\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n};\n\n/**\n * Locker. Add or remove.\n * @param {Boolean} [remove]\n */\nForm.prototype.lock = function (remove) {\n  if (!this.options.lockType || this.options.lockType === 'none') {\n    return;\n  }\n  if (remove) {\n    if (!this.sf.removeInstance('lock', this.node)) {\n      console.warn(\"You try to remove 'lock' instance, but it is not available or not started\");\n    }\n  } else if (!this.sf.addInstance('lock', this.node, { type: this.options.lockType })) {\n    console.warn(\"You try to add 'lock' instance, but it is not available or already started\");\n  }\n};\n\n// Form messages\nForm.prototype.showFormMessage = formMessages.showFormMessage;\nForm.prototype.showFieldMessage = formMessages.showFieldMessage;\nForm.prototype.showFieldsMessages = formMessages.showFieldsMessages;\nForm.prototype.showMessages = formMessages.showMessages;\nForm.prototype.removeMessages = formMessages.removeMessages;\nForm.prototype.removeMessage = formMessages.removeMessage;\n\nForm.prototype.processAnswer = function (answer) {\n  // eslint-disable-next-line no-unused-expressions\n  this.options.messagesType && this.showMessages(answer);\n};\n\n/**\n * Send form to server\n * @param {Object} sendOptions\n */\nForm.prototype.send = function (sendOptions) {\n  const that = this;\n  this.lock();\n  if (sendOptions.beforeSubmitCallback) {\n    // eslint-disable-next-line no-eval\n    const fn = eval(sendOptions.beforeSubmitCallback);\n    if (typeof (fn) === 'function') {\n      fn.call(sendOptions);\n    }\n  }\n  this.sf.ajax.send(sendOptions).then(\n    (answer) => {\n      that.events.trigger('success', sendOptions);\n      return answer;\n    },\n    (error) => {\n      that.events.trigger('error', sendOptions);\n      return error;\n    },\n  ).then((answer) => {\n    that.lock(true);\n    that.processAnswer(answer);\n    that.events.trigger('always', sendOptions);\n  });\n};\n\n/**\n * Serialize form\n * @return {Object}\n */\nForm.prototype.getFormData = function () {\n  if (window.FormData) {\n    return new FormData(this.options.context);\n  }\n  console.log(`Form \\`${this.options.context}\\` were processed without FormData.`);\n  return new FormToObject(this.options.context);\n};\n\n/**\n * Set options (overwrite current)\n * @param {Object} opt options\n */\nForm.prototype.setOptions = function (opt) {\n  this.options = Object.assign(this.options, opt);\n};\n\n/**\n * Add all events for forms\n */\nForm.prototype.addEvents = function () {\n  const that = this;\n  this.DOMEvents.add([\n    {\n      DOMNode: this.options.context,\n      eventType: 'submit',\n      eventFunction(e) {\n        that.onSubmit.call(that, e);\n      },\n    },\n  ]);\n};\n\n/**\n * Clear all variables and die\n */\nForm.prototype.die = function () {\n  this.DOMEvents.removeAll();\n  // TODO don't we need to remove it's addons and plugins?\n};\n\nexport default Form;\n","/* eslint-disable max-len */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-multi-assign */\n\nconst defaults = {\n  // eslint-disable-next-line no-template-curly-in-string\n  template: '<div class=\"alert form-msg ${type}\"><button class=\"btn-close\">×</button><p class=\"msg\">${text}</p></div>',\n  close: '.btn-close',\n  place: 'bottom',\n  levels: {\n    success: 'success', info: 'info', warning: 'warning', error: 'error',\n  },\n  field: '.item-form',\n  // eslint-disable-next-line no-template-curly-in-string\n  fieldTemplate: '<div class=\"alert form-msg ${type}\"><p class=\"msg\">${text}</p></div>',\n  fieldClose: '.btn-close',\n  fieldPlace: 'bottom',\n  fieldPrefix: '', // For bootstrap: class=\"has-danger\"\n};\n\n// Often used alias\ndefaults.levels.message = defaults.levels.success;\n\n// Other aliases\n// PSR-3 severity levels mapping (debug, info, notice, warning, error, critical, alert, emergency)\n// https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\ndefaults.levels.debug = defaults.levels.success;\ndefaults.levels.info = defaults.levels.notice = defaults.levels.info;\ndefaults.levels.danger = defaults.levels.critical = defaults.levels.alert = defaults.levels.emergency = defaults.levels.error;\n\n/**\n * @param {Object|String} message\n * @param {String} type\n * @return {Object}\n */\nfunction prepareMessageObject(message, type) {\n  if (Object.prototype.toString.call(message) !== '[object Object]') {\n    message = { text: message, type };\n  }\n  message.text = message.text || message.message || message;\n  message.type = message.type || type;\n  return message;\n}\n\nmodule.exports = {\n  defaults,\n  showMessages(answer) {\n    if (!answer) return;\n\n    let isMsg = false;\n    const that = this;\n\n    // for (const type in this.options.messages.levels) {\n    Object.keys(this.options.messages.levels).forEach((type) => {\n      if (answer[type]) {\n        this.showFormMessage(answer[type], this.options.messages.levels[type]);\n        isMsg = true;\n      }\n    });\n\n    if (answer.messages) {\n      this.showFieldsMessages(answer.messages, 'success');\n      isMsg = true;\n    }\n    if (answer.errors) {\n      this.showFieldsMessages(answer.errors, 'error');\n      isMsg = true;\n    }\n    if (answer.warnings) {\n      this.showFieldsMessages(answer.warnings, 'warning');\n      isMsg = true;\n    }\n\n    if (!isMsg && answer.status > 300) {\n      let error = answer.status ? `${answer.status} ` : '';\n      error += answer.statusText ? answer.statusText : '';\n      error += answer.data && !answer.statusText ? answer.data : '';\n      error += error.length === 0 ? answer : '';\n      this.showFormMessage(error, 'error');\n    }\n\n    this._messages.forEach((m) => {\n      if (m.close) {\n        m.closeHandler = that.removeMessage.bind(that, m);\n        m.close.addEventListener('click', m.closeHandler);\n      }\n    });\n  },\n  removeMessage(m, e) {\n    m.close && m.close.removeEventListener('click', m.closeHandler);\n    m.el.parentNode.removeChild(m.el);\n    m.field && m.field.classList.remove(this.options.messages.fieldPrefix + m.type);\n    if (e) {\n      e.preventDefault && e.preventDefault();\n      this._messages.splice(this._messages.indexOf(m), 1);\n    }\n  },\n  removeMessages() {\n    const that = this;\n    if (this._messages) {\n      this._messages.forEach((m) => {\n        that.removeMessage(m, false);\n      });\n    }\n    that._messages = [];\n  },\n  showFormMessage(message, type) {\n    let parent;\n    let tpl = this.options.messages.template;\n    const parser = new DOMParser();\n\n    message = prepareMessageObject(message, type);\n\n    // for (const item in message) {\n    Object.keys(message).forEach((item) => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!message.hasOwnProperty(item)) return;\n      tpl = tpl.replace(`\\${${item}}`, message[item]);\n    });\n\n    const msgEl = parser.parseFromString(tpl, 'text/html').firstChild.lastChild.firstChild;\n\n    if (this.options.messages.place === 'bottom') {\n      this.node.appendChild(msgEl);\n    } else if (this.options.messages.place === 'top') {\n      this.node.insertBefore(msgEl, this.node.firstChild);\n    } else {\n      parent = document.querySelector(this.options.messages.place);\n      parent.appendChild(msgEl);\n    }\n    this._messages.push({ el: msgEl, close: msgEl.querySelector(this.options.messages.close) });\n  },\n  /**\n     * @param {HTMLElement} el\n     * @param {String} message\n     * @param {String} type\n     * @param {Boolean} [isContainer]\n     */\n  showFieldMessage(el, message, type, isContainer) {\n    let field = isContainer ? el : window.sf.helpers.domTools.closest(el, this.options.messages.field);\n    let tpl = this.options.messages.fieldTemplate;\n\n    if (!field) return;\n\n    const parser = new DOMParser();\n    message = prepareMessageObject(message, type);\n\n    field.classList.add(this.options.messages.fieldPrefix + type);\n\n    // for (const item in message) {\n    Object.keys(message).forEach((item) => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!message.hasOwnProperty(item)) return;\n      tpl = tpl.replace(`\\${${item}}`, message[item]);\n    });\n\n    const msgEl = parser.parseFromString(tpl, 'text/html').firstChild.lastChild.firstChild;\n\n    if (this.options.messages.fieldPlace === 'bottom') {\n      field.appendChild(msgEl);\n    } else if (this.options.messages.fieldPlace === 'top') {\n      field.insertBefore(msgEl, field.firstChild);\n    } else {\n      field = field.querySelector(this.options.messages.fieldPlace);\n      field.appendChild(msgEl);\n    }\n\n    this._messages.push({\n      el: msgEl,\n      close: msgEl.querySelector(this.options.messages.fieldClose),\n      field,\n      type,\n    });\n  },\n  showFieldsMessages(messages, type) {\n    const that = this;\n    const notFound = window.sf.iterateInputs(this.node, messages, (el, message) => {\n      that.showFieldMessage(el, message, type);\n    });\n\n    notFound.forEach((msgObj) => {\n      Object.keys(msgObj).forEach((name) => {\n        const container = that.node.querySelector(`[data-message-placeholder=\"${name}\"]`);\n        if (container) {\n          // TODO check container.dataset.messageVariant? variants are \"field\" and \"form\"\n          that.showFieldMessage(container, msgObj[name], type, true);\n        }\n      });\n    });\n  },\n};\n","/* eslint-disable func-names */\n\n// Plugin in formMessages to iterate form inputs\n\n// TODO comment all of this\n// TODO ask @Systerr the reason of variable 'prefix'\nlet notFound = [];\n\n/**\n *\n * @param {HTMLElement} context\n * @param {Object} names\n * @param {Function} callback\n * @param {String} [prefix]\n */\nfunction findNodes(context, names, callback, prefix) {\n  // for (const name in names) {\n  Object.keys(names).forEach((name) => {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!names.hasOwnProperty(name)) {\n      return;\n    }\n\n    const partOfSelector = (prefix) ? `${prefix}[${name}]` : name;\n    const type = Object.prototype.toString.call(names[name]);\n    const selector = `[name='${partOfSelector}']`;\n\n    switch (type) {\n      case '[object Object]':\n        findNodes(context, names[name], callback, partOfSelector);\n        break;\n      case '[object Array]':\n        names[name].forEach((el) => {\n          // TODO refactor this should call recursive\n          const sel = `[name='${partOfSelector}[]'][value='${el}']`;\n          const nodes = context.querySelectorAll(sel);\n          if (nodes.length === 0) {\n            notFound.push(sel);\n          }\n          for (let i = 0, max = nodes.length; i < max; i += 1) {\n            callback(nodes[i], true);\n          }\n        });\n        break;\n      case '[object String]':\n      case '[object Number]':\n        // eslint-disable-next-line no-case-declarations\n        const nodes = context.querySelectorAll(selector);\n        if (nodes.length === 0) {\n          const obj = {};\n          obj[partOfSelector] = names[name];\n          notFound.push(obj);\n        }\n        for (let i = 0, max = nodes.length; i < max; i += 1) {\n          callback(nodes[i], names[name]);\n        }\n        break;\n\n      default:\n        console.error('unknown type -', type, ' and message', names[name]);\n    }\n  });\n}\n\n/**\n * @param {HTMLElement} context\n * @param {Object} names\n * @param {Function} callback\n * @param {String} [prefix]\n * @return {String[]}\n */\nconst iterateInputs = function (context, names, callback, prefix) {\n  notFound = [];\n  findNodes(context, names, callback, prefix);\n  if (notFound.length !== 0) {\n    // eslint-disable-next-line no-console\n    console.log('Some element not found in form', notFound);\n  }\n  return notFound;\n};\n\nmodule.exports = iterateInputs;\n"],"sourceRoot":""}